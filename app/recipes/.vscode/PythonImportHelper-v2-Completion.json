[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "itertools",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "itertools",
        "description": "itertools",
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "recipes.views",
        "description": "recipes.views",
        "isExtraImport": true,
        "detail": "recipes.views",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "migrations.0001_initial",
        "description": "migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Topping',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50, unique=True, verbose_name='Ингридиент')),",
        "detail": "migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ToppingAdmin",
        "kind": 6,
        "importPath": "admin",
        "description": "admin",
        "peekOfCode": "class ToppingAdmin(admin.ModelAdmin):\n    search_fields = ('name',)\n    list_filter = ('name',)\n@admin.display(description='Name')\ndef get_toppings(obj):\n    return tuple(obj.toppings.all())\nclass CookRecipeAdmin(admin.ModelAdmin):\n    list_display = ('title', get_toppings)\n    search_fields = ('title',)\nadmin.site.register(CookRecipe, CookRecipeAdmin)",
        "detail": "admin",
        "documentation": {}
    },
    {
        "label": "CookRecipeAdmin",
        "kind": 6,
        "importPath": "admin",
        "description": "admin",
        "peekOfCode": "class CookRecipeAdmin(admin.ModelAdmin):\n    list_display = ('title', get_toppings)\n    search_fields = ('title',)\nadmin.site.register(CookRecipe, CookRecipeAdmin)\nadmin.site.register(Topping, ToppingAdmin)",
        "detail": "admin",
        "documentation": {}
    },
    {
        "label": "get_toppings",
        "kind": 2,
        "importPath": "admin",
        "description": "admin",
        "peekOfCode": "def get_toppings(obj):\n    return tuple(obj.toppings.all())\nclass CookRecipeAdmin(admin.ModelAdmin):\n    list_display = ('title', get_toppings)\n    search_fields = ('title',)\nadmin.site.register(CookRecipe, CookRecipeAdmin)\nadmin.site.register(Topping, ToppingAdmin)",
        "detail": "admin",
        "documentation": {}
    },
    {
        "label": "RecipesConfig",
        "kind": 6,
        "importPath": "apps",
        "description": "apps",
        "peekOfCode": "class RecipesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'recipes'",
        "detail": "apps",
        "documentation": {}
    },
    {
        "label": "Topping",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class Topping(models.Model):\n    \"\"\" Ингридиент \"\"\"\n    name = models.CharField(max_length=50, verbose_name='Ингридиент', unique=True)\n    class Meta:\n        ordering = ['name']\n        verbose_name=\"Ингридиент\"\n        verbose_name_plural=\"Ингридиенты\"\n    def __str__(self):\n        return self.name.lower()\nclass CookRecipe(models.Model):",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "CookRecipe",
        "kind": 6,
        "importPath": "models",
        "description": "models",
        "peekOfCode": "class CookRecipe(models.Model):\n    \"\"\" Рецепт \"\"\"\n    title = models.CharField(max_length=50, verbose_name='Рецепт')\n    content = models.TextField(max_length=512, verbose_name='Описание')\n    toppings = models.ManyToManyField(\"Topping\", verbose_name='Ингридиенты', related_name='recipe_toppings')\n    class Meta:\n        ordering = ['title']\n        verbose_name=\"Рецепт\"\n        verbose_name_plural=\"Рецепты\"\n    def __str__(self):",
        "detail": "models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "urls",
        "description": "urls",
        "peekOfCode": "urlpatterns = [\n    path('', index, name='home'),\n]",
        "detail": "urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "views",
        "description": "views",
        "peekOfCode": "def index(request):\n    recipes = CookRecipe.objects.all()\n    context = {\n        'recipes':recipes,\n    }\n    return render(request, 'recipes/index.html', context=context)\n# Create your views here.",
        "detail": "views",
        "documentation": {}
    }
]